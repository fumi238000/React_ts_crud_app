{"version":3,"sources":["theme/theme.ts","urls/index.js","hooks/useMessage.ts","providers/LoginUserProvider.tsx","hooks/usePostUpdate.ts","components/molecules/PostForm.tsx","hooks/usePostCreate.ts","components/atms/button/GoBackButton.tsx","components/pages/post/PostCreatePage.tsx","components/pages/post/PostEditPage.tsx","hooks/usePostDelete.ts","components/organisms/post/PostCard.tsx","components/pages/post/PostIndexPage.tsx","hooks/usePostIndex.ts","router/PostRoutes.tsx","components/atms/button/LoginButton.tsx","components/pages/user/LoginPage.tsx","hooks/useUserLogin.ts","components/atms/button/GreenButton.tsx","components/atms/button/RedButton.tsx","components/pages/user/MyPage.tsx","hooks/useUserLogOut.ts","hooks/useUserDelete.ts","components/pages/user/SignUpPage.tsx","hooks/useUserSignUp.ts","components/pages/user/UserEditPage.tsx","hooks/useUserUpdate.ts","components/pages/user/PasswordEditPage.tsx","hooks/useUserPasswordUpdate.ts","components/pages/Page404.tsx","router/Router.tsx","components/atms/button/MenuIconButton.tsx","components/molecules/MenuDrawer.tsx","components/organisms/layouts/Header.tsx","components/templates/HeaderLayout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["theme","extendTheme","styles","global","body","backgroundColor","color","DEFAULT_API_LOCALHOST","process","postsIndexUrl","postsCreateUrl","logInUrl","logOutUrl","SignUpUrl","UserDeleteUrl","UserUpdateUrl","UserPwUPdateUrl","useMessage","toast","useToast","showMessage","useCallback","props","title","status","position","duration","isClosable","LoginUserContext","createContext","LoginUserProvider","children","useState","loginUser","setLoginUser","userLoginStatus","setUserLoginStatus","Provider","value","usePostUpdate","history","useHistory","loading","setLoading","useContext","updatePost","postId","postTitle","postDetals","axios","put","postsUpdateUrl","details","uid","accessToken","client","then","res","console","log","push","catch","error","PostForm","memo","postDetails","actionName","actionButtonName","inputPostTitle","setInputPostTitle","inputPostDetails","setInputPostDetails","createPost","post","user_id","usePostCreate","useEffect","align","justify","height","bg","w","p","borderRadius","shadow","as","size","textAlign","py","my","spacing","px","placeholder","onChange","e","target","_hover","opacity","onClick","isLoading","isDisabled","GoBackButton","m","colorScheme","goBack","PostCreatePage","PostEditPage","state","useLocation","useParams","usePostDelete","deletePost","delete","postsDeleteUrl","PostCard","postUserName","postUserId","width","userId","pathname","window","location","reload","onClickPostDelete","PostIndexPage","onClickPostCreatePage","posts","setPosts","getPosts","get","data","usePostIndex","fontSize","map","id","user","name","PostRoutes","path","exact","BlueButton","inputPassword","inputEmail","LoginPage","setinputEmail","setinputPassword","logIn","email","password","headers","useUserLogIn","type","pt","to","GreenButton","mt","RedButton","MyPage","logOut","useUserLogOut","userDelete","useUserDelete","SignUpPage","signUp","useUserSignUp","UserEditPage","userUpdate","useUserUpdate","inputUserName","setInputUserName","PasswordEditPage","inputUserPassword","setInputUserPassword","userPasswordUpdate","password_confirmation","useUserPasswordUpdate","Page404","Router","render","url","match","route","MenuIconButton","onOpen","icon","Hamburger","variant","display","base","md","MenuDrawer","onClose","isOpen","onClickMyPage","onClickPostIndex","onClickPostNew","onClickLoginPage","placement","Header","useDisclosure","padding","mr","pr","HeaderLayout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0679fc88.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  styles: {\n    global: {\n      body: {\n        backgroundColor: \"gray.100\",\n        color: \"gray.800\",\n      },\n    },\n  },\n});\n\nexport default theme;\n","//ローカルホスト\n// const DEFAULT_API_LOCALHOST = \"http://localhost:3000/v1\";\nconst DEFAULT_API_LOCALHOST = `${process.env.REACT_APP_SERVER_URL}`;\n\n//Post\nexport const postsIndexUrl = `${DEFAULT_API_LOCALHOST}/posts`;\nexport const postsCreateUrl = `${DEFAULT_API_LOCALHOST}/posts`;\nexport const postsUpdateUrl = (postId) =>\n  `${DEFAULT_API_LOCALHOST}/posts/${postId}`;\nexport const postsDeleteUrl = (postId) =>\n  `${DEFAULT_API_LOCALHOST}/posts/${postId}`;\n\n//User\nexport const logInUrl = `${DEFAULT_API_LOCALHOST}/auth/sign_in`;\nexport const logOutUrl = `${DEFAULT_API_LOCALHOST}/auth/sign_out`;\nexport const SignUpUrl = `${DEFAULT_API_LOCALHOST}/auth`;\nexport const UserDeleteUrl = `${DEFAULT_API_LOCALHOST}/auth`;\nexport const UserUpdateUrl = `${DEFAULT_API_LOCALHOST}/auth`;\nexport const UserPwUPdateUrl = `${DEFAULT_API_LOCALHOST}/auth/password`;\n//todo: 重複しているURLを共通化できないか？\n","import { useToast } from \"@chakra-ui/toast\";\nimport { useCallback } from \"react\";\n\ntype Props = {\n  title: string;\n  status: \"info\" | \"warning\" | \"success\" | \"error\";\n};\n\nexport const useMessage = () => {\n  const toast = useToast();\n\n  const showMessage = useCallback(\n    (props: Props) => {\n      const { title, status } = props;\n      toast({\n        title,\n        status,\n        position: \"top\",\n        duration: 2000,\n        isClosable: true,\n      });\n    },\n    [toast]\n  );\n\n  return { showMessage };\n};\n","import {\n  createContext,\n  ReactNode,\n  useState,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\n\ntype User = {\n  userId: number;\n  name: string;\n  email: string;\n  uid?: string;\n  client?: string;\n  accessToken?: string;\n};\n\ntype LoginUserContextType = {\n  loginUser: User | null;\n  setLoginUser: Dispatch<SetStateAction<User | null>>;\n  userLoginStatus: boolean;\n  setUserLoginStatus: Dispatch<SetStateAction<boolean>>;\n};\n\nexport const LoginUserContext = createContext<LoginUserContextType>(\n  {} as LoginUserContextType\n);\n\nexport const LoginUserProvider = (props: { children: ReactNode }) => {\n  const { children } = props;\n  const [loginUser, setLoginUser] = useState<User | null>(null);\n  const [userLoginStatus, setUserLoginStatus] = useState<boolean | boolean>(\n    false\n  );\n\n  return (\n    <LoginUserContext.Provider\n      value={{ loginUser, setLoginUser, userLoginStatus, setUserLoginStatus }}\n    >\n      {children}\n    </LoginUserContext.Provider>\n  );\n};\n","import axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { LoginUserContext } from \"../providers/LoginUserProvider\";\n\nimport { postsUpdateUrl } from \"../urls\";\nimport { useMessage } from \"./useMessage\";\n\nexport const usePostUpdate = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const { loginUser } = useContext(LoginUserContext);\n\n  const updatePost = (\n    postId: number,\n    postTitle: string,\n    postDetals: string\n  ) => {\n    setLoading(true);\n\n    axios\n      .put(postsUpdateUrl(postId), {\n        title: postTitle,\n        details: postDetals,\n        uid: loginUser?.uid,\n        \"access-token\": loginUser?.accessToken,\n        client: loginUser?.client,\n      })\n      .then((res) => {\n        console.log(res);\n        showMessage({ title: \"投稿を更新しました\", status: \"success\" });\n        setLoading(false);\n        history.push(\"/posts\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoading(false);\n        showMessage({ title: \"更新に失敗しました\", status: \"error\" });\n      });\n  };\n  return { updatePost, loading };\n};\n","import { useState, useEffect, ChangeEvent, memo, VFC } from \"react\";\nimport {\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Heading,\n  Input,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { usePostCreate } from \"../../hooks/usePostCreate\";\nimport { usePostUpdate } from \"../../hooks/usePostUpdate\";\n\ntype Props = {\n  postId?: any;\n  postTitle: string;\n  postDetails: string;\n  actionName: string;\n  actionButtonName: string;\n};\n\nexport const PostForm: VFC<Props> = memo((props) => {\n  const { postId, postTitle, postDetails, actionName, actionButtonName } =\n    props;\n  const [inputPostTitle, setInputPostTitle] = useState(\"\");\n  const [inputPostDetails, setInputPostDetails] = useState(\"\");\n  const onChangeInputPostTitle = (e: ChangeEvent<HTMLInputElement>) =>\n    setInputPostTitle(e.target.value);\n  const onChangeInputPostDetails = (e: ChangeEvent<HTMLInputElement>) =>\n    setInputPostDetails(e.target.value);\n  const { createPost, loading } = usePostCreate();\n  const { updatePost } = usePostUpdate();\n\n  useEffect(() => {\n    setInputPostTitle(postTitle);\n    setInputPostDetails(postDetails);\n  }, [postTitle, postDetails]);\n\n  const onClickCreatePost = () => {\n    createPost(inputPostTitle, inputPostDetails);\n  };\n\n  const onClickUpdatePost = () => {\n    updatePost(postId, inputPostTitle, inputPostDetails);\n  };\n\n  return (\n    <Flex align=\"center\" justify=\"center\" height=\"50vh\">\n      <Box bg=\"white\" w=\"2xl\" p={4} borderRadius=\"md\" shadow=\"md\">\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"center\" py={4}>\n          {actionName}\n        </Heading>\n        <Divider my={4}></Divider>\n        <Stack spacing={4} py={4} px={6}>\n          <p>タイトル</p>\n          <Input\n            placeholder=\"タイトル\"\n            value={inputPostTitle}\n            onChange={onChangeInputPostTitle}\n          />\n          <p>詳細</p>\n          <Input\n            placeholder=\"詳細\"\n            value={inputPostDetails}\n            onChange={onChangeInputPostDetails}\n          />\n          {actionName === \"編集\" && (\n            <Button\n              bg=\"blue.500\"\n              color=\"white\"\n              _hover={{ opacity: 0.7 }}\n              onClick={onClickUpdatePost}\n              isLoading={loading}\n              isDisabled={inputPostTitle === \"\" || inputPostDetails === \"\"}\n            >\n              {actionButtonName}\n            </Button>\n          )}\n\n          {actionName === \"新規作成\" && (\n            <Button\n              bg=\"blue.500\"\n              color=\"white\"\n              _hover={{ opacity: 0.7 }}\n              onClick={onClickCreatePost}\n              isLoading={loading}\n              isDisabled={inputPostTitle === \"\" || inputPostDetails === \"\"}\n            >\n              {actionButtonName}\n            </Button>\n          )}\n        </Stack>\n      </Box>\n    </Flex>\n  );\n});\n","import { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { postsCreateUrl } from \"../urls\";\nimport { useMessage } from \"./useMessage\";\nimport { LoginUserContext } from \"../providers/LoginUserProvider\";\n\nexport const usePostCreate = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const { loginUser } = useContext(LoginUserContext);\n\n  const createPost = (postTitle: string, postDetails: string) => {\n    setLoading(true);\n\n    axios\n      .post(postsCreateUrl, {\n        user_id: 1,\n        title: postTitle,\n        details: postDetails,\n        uid: loginUser?.uid,\n        \"access-token\": loginUser?.accessToken,\n        client: loginUser?.client,\n      })\n      .then((res) => {\n        console.log(res);\n        showMessage({ title: \"投稿を作成しました\", status: \"success\" });\n        setLoading(false);\n        history.push(\"/posts\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoading(false);\n        showMessage({ title: \"作成に失敗しました\", status: \"error\" });\n      });\n  };\n\n  //TODO: ここで作成したPostのidを返して、無駄なAPI通信を省きたい\n  return { createPost, loading };\n};\n","import { memo, VFC } from \"react\";\nimport { Button, Box } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\n\n// eslint-disable-next-line react/display-name\nexport const GoBackButton: VFC = memo(() => {\n  const history = useHistory();\n  const onClickBack = () => history.goBack();\n\n  return (\n    <Box textAlign=\"left\" px={4} py={8} m={4}>\n      <Button colorScheme=\"blue\" onClick={onClickBack}>\n        戻る\n      </Button>\n    </Box>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { PostForm } from \"../../molecules/PostForm\";\nimport { GoBackButton } from \"../../atms/button/GoBackButton\";\n\nexport const PostCreatePage: VFC = memo(() => {\n  return (\n    <>\n      <GoBackButton />\n      <PostForm\n        actionName={\"新規作成\"}\n        postTitle={\"\"}\n        postDetails={\"\"}\n        actionButtonName={\"作成する\"}\n      />\n    </>\n  );\n});\n","import { memo } from \"react\";\nimport { PostForm } from \"../../molecules/PostForm\";\nimport { GoBackButton } from \"../../atms/button/GoBackButton\";\nimport { useLocation, useParams } from \"react-router-dom\";\n\ntype Props = {\n  postId?: number;\n  postTitle: string;\n  postDetails: string;\n};\n\nexport const PostEditPage = memo(() => {\n  const { state } = useLocation<Props>();\n  const { postId } = useParams<any>();\n\n  return (\n    <>\n      <GoBackButton />\n      <PostForm\n        postId={postId}\n        postTitle={state.postTitle}\n        postDetails={state.postDetails}\n        actionName={\"編集\"}\n        actionButtonName={\"更新する\"}\n      />\n    </>\n  );\n});\n","import axios from \"axios\";\n\nimport { postsDeleteUrl } from \"../urls\";\nimport { useMessage } from \"./useMessage\";\n\nexport const usePostDelete = () => {\n  const { showMessage } = useMessage();\n\n  const deletePost = (postId: number) => {\n    axios\n      .delete(postsDeleteUrl(postId))\n      .then((res) => {\n        console.log(res);\n        showMessage({ title: \"投稿を削除しました\", status: \"error\" });\n      })\n      .catch((error) => {\n        console.log(error);\n        showMessage({ title: \"投稿を削除できませんでした\", status: \"success\" });\n      });\n  };\n  //todo: 削除したidを渡して、それを削除する記述を書きたい\n  return { deletePost };\n};\n","import { memo, useContext, VFC } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Box, Button, Flex, Heading, Divider, Stack } from \"@chakra-ui/react\";\nimport { usePostDelete } from \"../../../hooks/usePostDelete\";\nimport { LoginUserContext } from \"../../../providers/LoginUserProvider\";\n\ntype Props = {\n  postUserId: number;\n  postId: number;\n  postTitle: string;\n  postDetails: string;\n  postUserName: string;\n};\n\nexport const PostCard: VFC<Props> = memo((props) => {\n  const { postId, postTitle, postDetails, postUserName, postUserId } = props;\n  const { loginUser } = useContext(LoginUserContext);\n\n  const history = useHistory();\n  const { deletePost } = usePostDelete();\n\n  const onClickPostEditPage = () => {\n    history.push({\n      pathname: `/posts/${postId}`,\n      state: { postTitle, postDetails },\n    });\n  };\n\n  const onClickPostDelete = (postId: number) => {\n    deletePost(postId);\n    window.location.reload();\n    // setPosts(posts.filter(post => post.id !== post.id)) //将来的にこちらに置き換える\n  };\n\n  return (\n    <div key={postId}>\n      <Flex align=\"center\" justify=\"center\" width=\"100%\">\n        <Box bg=\"white\" w=\"4xl\" p={4} m={4} borderRadius=\"md\" shadow=\"md\">\n          <Heading as=\"h3\" size=\"md\" textAlign=\"center\" py={2}>\n            {postTitle}\n          </Heading>\n          <Heading as=\"h3\" size=\"xs\" textAlign=\"center\" py={2}>\n            投稿者：{postUserName}\n          </Heading>\n          <Divider my={4}></Divider>\n          <Stack spacing={4} py={8} px={8}>\n            <Heading size=\"sm\" textAlign=\"left\" px={10}>\n              {postDetails}\n            </Heading>\n            {postUserId === loginUser?.userId && (\n              <Box textAlign=\"right\">\n                <Button\n                  bg=\"green.500\"\n                  color=\"white\"\n                  _hover={{ opacity: 0.7 }}\n                  m={1}\n                  onClick={onClickPostEditPage}\n                >\n                  編集\n                </Button>\n                <Button\n                  bg=\"red.500\"\n                  color=\"white\"\n                  _hover={{ opacity: 0.7 }}\n                  m={1}\n                  onClick={() => {\n                    onClickPostDelete(postId);\n                  }}\n                >\n                  削除\n                </Button>\n              </Box>\n            )}\n          </Stack>\n        </Box>\n      </Flex>\n    </div>\n  );\n});\n","import React, { useEffect, useCallback } from \"react\";\nimport { Button, Box, Heading } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { PostCard } from \"../../organisms/post/PostCard\";\nimport { usePostIndex } from \"../../../hooks/usePostIndex\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const PostIndexPage = () => {\n  const history = useHistory();\n  const onClickPostCreatePage = useCallback(\n    () => history.push(\"/posts/new\"),\n    [history]\n  );\n  const { getPosts, posts } = usePostIndex();\n  // todo: postsを持っていない場合のみ取得する\n  useEffect(() => getPosts(), []);\n  console.log(posts)\n\n  return (\n    <>\n      <Heading fontSize=\"2xl\" p={4}>\n        投稿一覧\n      </Heading>\n      <Box textAlign=\"right\" px={4} py={8} m={4}>\n        <Button colorScheme=\"blue\" onClick={onClickPostCreatePage}>\n          新規作成\n        </Button>\n      </Box>\n      {posts.map((post) => (\n        // eslint-disable-next-line react/jsx-key\n        <PostCard\n          postUserId={post.user_id}\n          postId={post.id}\n          postTitle={post.title}\n          postDetails={post.details}\n          postUserName={post.user.name}\n        />\n      ))}\n    </>\n  );\n};\n","import { useState } from \"react\";\nimport axios from \"axios\";\n\nimport { postsIndexUrl } from \"../urls\";\n\ntype Posts = {\n  id: number;\n  title: string;\n  details: string;\n  user_id: number;\n  user: { name: string };\n};\n\nexport const usePostIndex = () => {\n  const [posts, setPosts] = useState<Array<Posts>>([]);\n  const getPosts = () => {\n    axios\n      .get(postsIndexUrl)\n      .then((res) => {\n        console.log(res.data);\n        setPosts(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  return { getPosts, posts };\n};\n","import { PostCreatePage } from \"../components/pages/post/PostCreatePage\";\nimport { PostEditPage } from \"../components/pages/post/PostEditPage\";\nimport { PostIndexPage } from \"../components/pages/post/PostIndexPage\";\n\nexport const PostRoutes = [\n  {\n    path: \"/\",\n    exact: true,\n    children: <PostIndexPage />,\n  },\n  {\n    path: \"/new\",\n    exact: false,\n    children: <PostCreatePage />,\n  },\n  //todo: 正常値を渡さない場合のエラー対応を実装する\n  {\n    path: \"/:postId\",\n    exact: false,\n    children: <PostEditPage />,\n  },\n];\n","import { ReactNode, memo, VFC } from \"react\";\nimport { Button } from \"@chakra-ui/react\";\n\ntype Props = {\n  children: ReactNode;\n  onClick: () => void;\n  loading: boolean;\n  inputPassword: string;\n  inputEmail: string;\n};\n\nexport const BlueButton: VFC<Props> = memo((props) => {\n  const { children, onClick, loading, inputPassword, inputEmail } = props;\n  return (\n    <Button\n      bg=\"blue.500\"\n      color=\"white\"\n      onClick={onClick}\n      isLoading={loading}\n      isDisabled={inputEmail === \"\" || inputPassword === \"\"}\n    >\n      {children}\n    </Button>\n  );\n});\n","import { useState, ChangeEvent, memo, VFC } from \"react\";\nimport { Box, Flex, Heading, Divider, Input, Stack } from \"@chakra-ui/react\";\n\nimport { useUserLogIn } from \"../../../hooks/useUserLogin\";\nimport { Link } from \"react-router-dom\";\nimport { BlueButton } from \"../../atms/button/LoginButton\";\n\nexport const LoginPage: VFC = memo(() => {\n  const [inputEmail, setinputEmail] = useState<string>(\"\");\n  const [inputPassword, setinputPassword] = useState<string>(\"\");\n  const onChangeInputEmail = (e: ChangeEvent<HTMLInputElement>) =>\n    setinputEmail(e.target.value);\n  const onChangeInputUserPassword = (e: ChangeEvent<HTMLInputElement>) =>\n    setinputPassword(e.target.value);\n  const { logIn, loading } = useUserLogIn();\n\n  const onClickLogin = () => {\n    logIn(inputEmail, inputPassword);\n  };\n\n  return (\n    <Flex align=\"center\" justify=\"center\" height=\"90vh\">\n      <Box bg=\"white\" w=\"sm\" p={4} borderRadius=\"md\" shadow=\"md\">\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"center\" py={4}>\n          ログイン\n        </Heading>\n        <Divider my={4}></Divider>\n        <Stack spacing={4} py={4} px={6}>\n          <p>Email</p>\n          <Input\n            placeholder=\"Email\"\n            type=\"email\"\n            value={inputEmail}\n            onChange={onChangeInputEmail}\n          />\n          <p>パスワード</p>\n          <Input\n            placeholder=\"パスワード\"\n            type=\"password\"\n            value={inputPassword}\n            onChange={onChangeInputUserPassword}\n          />\n          <BlueButton\n            onClick={onClickLogin}\n            loading={loading}\n            inputEmail={inputEmail}\n            inputPassword={inputPassword}\n          >\n            ログイン\n          </BlueButton>\n          <Box pt={4} align=\"center\">\n            <Link to=\"/signup\">新規作成する</Link>\n          </Box>\n        </Stack>\n      </Box>\n    </Flex>\n  );\n});\n","import axios from \"axios\";\nimport { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { logInUrl } from \"../urls\";\nimport { useMessage } from \"./useMessage\";\nimport { LoginUserContext } from \"../providers/LoginUserProvider\";\n\nexport const useUserLogIn = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const { setLoginUser, setUserLoginStatus } = useContext(LoginUserContext);\n\n  const logIn = (email: string, password: string) => {\n    setLoading(true);\n\n    axios\n      .post(logInUrl, {\n        email: email,\n        password: password,\n      })\n      .then((res) => {\n        setLoginUser({\n          userId: res.data[`data`][`id`],\n          name: res.data[`data`][`name`],\n          email: res.data[`data`][`email`],\n          accessToken: res.headers[`access-token`],\n          client: res.headers[\"client\"],\n          uid: res.headers[`uid`],\n        });\n\n        showMessage({ title: \"ログインしました\", status: \"success\" });\n        setLoading(false);\n        setUserLoginStatus(true);\n        history.push(\"/posts\");\n      })\n      .catch((error) => {\n        console.log(error);\n        showMessage({ title: \"ログインにできませんでした\", status: \"error\" });\n        setLoading(false);\n      });\n  };\n  // todo: userIdも返せるようにしたい。\n  return { logIn, loading };\n};\n","import { ReactNode, memo, VFC } from \"react\";\nimport { Box, Button } from \"@chakra-ui/react\";\n\ntype Props = {\n  children: ReactNode;\n  onClick: () => void;\n};\n\nexport const GreenButton: VFC<Props> = memo((props) => {\n  const { children, onClick } = props;\n  return (\n    <Box mt={4} pt={4} align=\"center\">\n      <Button w=\"xs\" bg=\"green.400\" color=\"white\" onClick={onClick}>\n        {children}\n      </Button>\n    </Box>\n  );\n});\n","import { ReactNode, memo, VFC } from \"react\";\nimport { Box, Button } from \"@chakra-ui/react\";\n\ntype Props = {\n  children: ReactNode;\n  onClick: () => void;\n};\n\nexport const RedButton: VFC<Props> = memo((props) => {\n  const { children, onClick } = props;\n  return (\n    <Box mt={4} pt={4} align=\"center\">\n      <Button w=\"xs\" bg=\"red.400\" color=\"white\" onClick={onClick}>\n        {children}\n      </Button>\n    </Box>\n  );\n});\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport { useContext, memo, VFC } from \"react\";\nimport { Box, Flex, Heading } from \"@chakra-ui/react\";\n\nimport { LoginUserContext } from \"../../../providers/LoginUserProvider\";\nimport { useUserLogOut } from \"../../../hooks/useUserLogOut\";\nimport { useHistory } from \"react-router-dom\";\nimport { useUserDelete } from \"../../../hooks/useUserDelete\";\nimport { GreenButton } from \"../../atms/button/GreenButton\";\nimport { RedButton } from \"../../atms/button/RedButton\";\n\nexport const MyPage: VFC = memo(() => {\n  const history = useHistory();\n\n  const { loginUser } = useContext(LoginUserContext);\n  const { logOut } = useUserLogOut();\n  const { userDelete } = useUserDelete();\n  const onClickLogOut = () => logOut();\n  const onClickUserEditPage = () => history.push(\"/user/edit\");\n  const onClickPasswordEditPage = () => history.push(\"/password\");\n  const onClickUserDelete = () => userDelete();\n\n  return (\n    <>\n      <Flex align=\"center\" justify=\"center\" height=\"70vh\">\n        <Box bg=\"white\" w=\"sm\" p={4} borderRadius=\"md\" shadow=\"md\">\n          <Heading as=\"h1\" size=\"lg\" textAlign=\"center\" py={4}>\n            マイページ\n          </Heading>\n          <Heading size=\"sm\" textAlign=\"center\" py={4}>\n            ログインID：{loginUser?.userId}\n          </Heading>\n          <Heading size=\"sm\" textAlign=\"center\" py={4}>\n            Email：{loginUser?.email}\n          </Heading>\n          <Heading size=\"sm\" textAlign=\"center\" py={4}>\n            ユーザーネーム：{loginUser?.name}\n          </Heading>\n\n          <GreenButton onClick={onClickUserEditPage}>ユーザー編集</GreenButton>\n          <GreenButton onClick={onClickPasswordEditPage}>\n            パスワード編集\n          </GreenButton>\n          <RedButton onClick={onClickLogOut}>ログアウト</RedButton>\n          <RedButton onClick={onClickUserDelete}>このユーザーを削除</RedButton>\n        </Box>\n      </Flex>\n    </>\n  );\n});\n","import axios from \"axios\";\nimport { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { logOutUrl } from \"../urls\";\nimport { useMessage } from \"./useMessage\";\nimport { LoginUserContext } from \"../providers/LoginUserProvider\";\n\nexport const useUserLogOut = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n  const { loginUser, setLoginUser, setUserLoginStatus } =\n    useContext(LoginUserContext);\n\n  const logOut = () => {\n    axios\n      .delete(logOutUrl, {\n        headers: {\n          uid: loginUser?.uid,\n          \"access-token\": loginUser?.accessToken,\n          client: loginUser?.client,\n        },\n      })\n      .then((res) => {\n        setLoginUser(null);\n        setUserLoginStatus(false);\n        showMessage({ title: \"ログアウトしました\", status: \"error\" });\n        history.push(\"/login\");\n      })\n      .catch((error) => {\n        console.log(error);\n        showMessage({ title: \"ログアウトできませんでした\", status: \"error\" });\n      });\n  };\n  return { logOut };\n};\n","import axios from \"axios\";\nimport { useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { UserDeleteUrl } from \"../urls\";\nimport { useMessage } from \"./useMessage\";\nimport { LoginUserContext } from \"../providers/LoginUserProvider\";\n\nexport const useUserDelete = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n  const [loading, setLoading] = useState(false);\n  const { loginUser, setLoginUser, setUserLoginStatus } =\n    useContext(LoginUserContext);\n\n  const userDelete = () => {\n    setLoading(true);\n\n    axios\n      .delete(UserDeleteUrl, {\n        headers: {\n          uid: loginUser?.uid,\n          \"access-token\": loginUser?.accessToken,\n          client: loginUser?.client,\n        },\n      })\n      .then((res) => {\n        console.log(res);\n        setLoginUser(null);\n        showMessage({ title: \"ユーザーを削除しました\", status: \"error\" });\n        setLoading(false);\n        setUserLoginStatus(false);\n        history.push(\"/login\");\n      })\n      .catch((error) => {\n        console.log(error);\n        showMessage({ title: \"削除できませんでした\", status: \"error\" });\n        setLoading(false);\n      });\n  };\n  return { userDelete, loading };\n};\n","import { Flex, Box, Heading, Divider, Stack, Input } from \"@chakra-ui/react\";\nimport { ChangeEvent, memo, useState, VFC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useUserSignUp } from \"../../../hooks/useUserSignUp\";\nimport { BlueButton } from \"../../atms/button/LoginButton\";\n\nexport const SignUpPage: VFC = memo(() => {\n  const [inputEmail, setinputEmail] = useState<string>(\"\");\n  const [inputPassword, setinputPassword] = useState<string>(\"\");\n  const onChangeInputEmail = (e: ChangeEvent<HTMLInputElement>) =>\n    setinputEmail(e.target.value);\n  const onChangeInputUserPassword = (e: ChangeEvent<HTMLInputElement>) =>\n    setinputPassword(e.target.value);\n  const { signUp, loading } = useUserSignUp();\n  const onClickSignUp = () => signUp(inputEmail, inputPassword);\n\n  return (\n    <Flex align=\"center\" justify=\"center\" height=\"100vh\">\n      <Box bg=\"white\" w=\"sm\" p={4} borderRadius=\"md\" shadow=\"md\">\n        <Heading as=\"h1\" size=\"lg\" textAlign=\"center\" py={4}>\n          新規作成\n        </Heading>\n        <Divider my={4}></Divider>\n        <Stack spacing={4} py={4} px={6}>\n          <p>Email</p>\n          <Input\n            placeholder=\"Email\"\n            type=\"email\"\n            value={inputEmail}\n            onChange={onChangeInputEmail}\n          />\n          <p>パスワード</p>\n          <Input\n            placeholder=\"パスワード\"\n            type=\"password\"\n            value={inputPassword}\n            onChange={onChangeInputUserPassword}\n          />\n          <BlueButton\n            onClick={onClickSignUp}\n            loading={loading}\n            inputEmail={inputEmail}\n            inputPassword={inputPassword}\n          >\n            新規作成\n          </BlueButton>\n          <Box pt={4} align=\"center\">\n            <Link to=\"/login\">ログインする</Link>\n          </Box>\n        </Stack>\n      </Box>\n    </Flex>\n  );\n});\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { SignUpUrl } from \"../urls\";\nimport { useMessage } from \"./useMessage\";\nimport { LoginUserContext } from \"../providers/LoginUserProvider\";\n\nexport const useUserSignUp = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n  const { setLoginUser, setUserLoginStatus } = useContext(LoginUserContext);\n  const [loading, setLoading] = useState(false);\n\n  const signUp = (email: string, password: string) => {\n    setLoading(true);\n\n    axios\n      .post(SignUpUrl, {\n        name: \"テストユーザー\",\n        email: email,\n        password: password,\n      })\n      .then((res) => {\n        setLoginUser({\n          userId: res.data[`data`][`id`],\n          name: res.data[`data`][`name`],\n          email: res.data[`data`][`email`],\n          accessToken: res.headers[`access-token`],\n          client: res.headers[\"client\"],\n          uid: res.headers[`uid`],\n        });\n        showMessage({\n          title: \"新しくユーザーを作成しました\",\n          status: \"success\",\n        });\n        setUserLoginStatus(true);\n        setLoading(false);\n        history.push(\"/posts\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoading(false);\n        showMessage({ title: \"作成に失敗しました。\", status: \"error\" });\n      });\n  };\n  return { signUp, loading };\n};\n","import {\n  Flex,\n  Box,\n  Heading,\n  Divider,\n  Stack,\n  Input,\n  Button,\n} from \"@chakra-ui/react\";\nimport { ChangeEvent, memo, useState, VFC } from \"react\";\nimport { useUserUpdate } from \"../../../hooks/useUserUpdate\";\nimport { GoBackButton } from \"../../atms/button/GoBackButton\";\n\nexport const UserEditPage: VFC = memo(() => {\n  const { userUpdate, loading } = useUserUpdate();\n  //todo: 初期値をログインユーザーにしたい。\n  // ここにログインユーザーの情報を取得するカスタムフックを追加するか？\n\n  //name\n  const [inputUserName, setInputUserName] = useState<string>(\"\");\n  const onChangeInputUserName = (e: ChangeEvent<HTMLInputElement>) =>\n    setInputUserName(e.target.value);\n\n  //email\n  const onChangeInputEmail = (e: ChangeEvent<HTMLInputElement>) =>\n    setinputEmail(e.target.value);\n  const [inputEmail, setinputEmail] = useState<string>(\"\");\n\n  //更新ボタン\n  const onClickUserUpdate = () => {\n    userUpdate(inputUserName, inputEmail);\n  };\n\n  return (\n    <>\n      <GoBackButton />\n      <Flex align=\"center\" justify=\"center\" height=\"50vh\">\n        <Box bg=\"white\" w=\"sm\" p={4} borderRadius=\"md\" shadow=\"md\">\n          <Heading as=\"h1\" size=\"lg\" textAlign=\"center\" py={4}>\n            ユーザー編集\n          </Heading>\n          <Divider my={4}></Divider>\n          <Stack spacing={4} py={4} px={6}>\n            <p>ユーザーネーム</p>\n            <Input\n              placeholder=\"UserName\"\n              type=\"text\"\n              value={inputUserName}\n              onChange={onChangeInputUserName}\n            />\n            <p>新しいEmail</p>\n            <Input\n              placeholder=\"Email\"\n              type=\"email\"\n              value={inputEmail}\n              onChange={onChangeInputEmail}\n            />\n            <Button\n              bg=\"blue.500\"\n              color=\"white\"\n              onClick={onClickUserUpdate}\n              isLoading={loading}\n              isDisabled={inputUserName === \"\" || inputEmail === \"\"}\n            >\n              更新する\n            </Button>\n          </Stack>\n        </Box>\n      </Flex>\n    </>\n  );\n});\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\n\nimport { UserUpdateUrl } from \"../urls\";\nimport { useMessage } from \"./useMessage\";\nimport { LoginUserContext } from \"../providers/LoginUserProvider\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const useUserUpdate = () => {\n  const { showMessage } = useMessage();\n  const { loginUser, setLoginUser, setUserLoginStatus } =\n    useContext(LoginUserContext);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const userUpdate = (name: string, email: string) => {\n    setLoading(true);\n\n    axios\n      .put(UserUpdateUrl, {\n        name: name,\n        email: email,\n        uid: loginUser?.uid,\n        \"access-token\": loginUser?.accessToken,\n        client: loginUser?.client,\n        \"Content-Type\": `application/json`,\n      })\n      .then((res) => {\n        setLoginUser({\n          userId: res.data[`data`][`id`],\n          name: res.data[`data`][`name`],\n          email: res.data[`data`][`email`],\n          accessToken: res.headers[`access-token`],\n          client: res.headers[\"client\"],\n          uid: res.headers[`uid`],\n        });\n        showMessage({ title: \"ユーザー情報を更新しました\", status: \"success\" });\n        setUserLoginStatus(true);\n        setLoading(false);\n        history.push(\"/mypage\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoading(false);\n        showMessage({\n          title: \"ユーザー情報の更新に失敗しました\",\n          status: \"error\",\n        });\n      });\n  };\n  return { userUpdate, loading };\n};\n","import {\n  Flex,\n  Box,\n  Heading,\n  Divider,\n  Stack,\n  Input,\n  Button,\n} from \"@chakra-ui/react\";\nimport { ChangeEvent, memo, useState, VFC } from \"react\";\nimport { useUserPasswordUpdate } from \"../../../hooks/useUserPasswordUpdate\";\nimport { GoBackButton } from \"../../atms/button/GoBackButton\";\n\nexport const PasswordEditPage: VFC = memo(() => {\n  const [inputUserPassword, setInputUserPassword] = useState<string>(\"\");\n  const onChangeInputUserPassword = (e: ChangeEvent<HTMLInputElement>) =>\n    setInputUserPassword(e.target.value);\n  const { userPasswordUpdate, loading } = useUserPasswordUpdate();\n\n  //更新ボタン\n  const onClickPasswordUpdate = () => {\n    userPasswordUpdate(inputUserPassword);\n  };\n\n  return (\n    <>\n      <GoBackButton />\n      <Flex align=\"center\" justify=\"center\" height=\"50vh\">\n        <Box bg=\"white\" w=\"sm\" p={4} borderRadius=\"md\" shadow=\"md\">\n          <Heading as=\"h1\" size=\"lg\" textAlign=\"center\" py={4}>\n            パスワードを編集\n          </Heading>\n          <Divider my={4}></Divider>\n          <Stack spacing={4} py={4} px={6}>\n            <p>新しいパスワード</p>\n            <Input\n              placeholder=\"パスワード\"\n              type=\"password\"\n              value={inputUserPassword}\n              onChange={onChangeInputUserPassword}\n            />\n            <Button\n              bg=\"blue.500\"\n              color=\"white\"\n              onClick={onClickPasswordUpdate}\n              isLoading={loading}\n              isDisabled={inputUserPassword === \"\"}\n            >\n              更新する\n            </Button>\n          </Stack>\n        </Box>\n      </Flex>\n    </>\n  );\n});\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { UserPwUPdateUrl } from \"../urls\";\nimport { useMessage } from \"./useMessage\";\nimport { LoginUserContext } from \"../providers/LoginUserProvider\";\n\nexport const useUserPasswordUpdate = () => {\n  const history = useHistory();\n  const { showMessage } = useMessage();\n  const { loginUser, setLoginUser, setUserLoginStatus } =\n    useContext(LoginUserContext);\n  const [loading, setLoading] = useState(false);\n\n  const userPasswordUpdate = (password: string) => {\n    setLoading(true);\n\n    axios\n      .put(UserPwUPdateUrl, {\n        password: password,\n        password_confirmation: password,\n        uid: loginUser?.uid,\n        \"access-token\": loginUser?.accessToken,\n        client: loginUser?.client,\n        \"Content-Type\": \"application/json\",\n      })\n      .then((res) => {\n        setLoginUser({\n          userId: res.data[`data`][`id`],\n          name: res.data[`data`][`name`],\n          email: res.data[`data`][`email`],\n          accessToken: res.headers[`access-token`],\n          client: res.headers[\"client\"],\n          uid: res.headers[`uid`],\n        });\n        showMessage({\n          title: \"ユーザーのパスワードを更新しました\",\n          status: \"success\",\n        });\n        setUserLoginStatus(true);\n        setLoading(false);\n        history.push(\"/mypage\");\n      })\n      .catch((error) => {\n        console.log(error);\n        setLoading(false);\n        showMessage({\n          title: \"ユーザーパスワードの更新に失敗しました。\",\n          status: \"error\",\n        });\n      });\n  };\n  return { userPasswordUpdate, loading };\n};\n","import { Box, Flex, Heading } from \"@chakra-ui/react\";\nimport { memo, VFC } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Page404: VFC = memo(() => {\n  return (\n    <>\n      <Flex align=\"center\" justify=\"center\" height=\"60vh\">\n        <Box>\n          <Heading as=\"h1\" size=\"2xl\" textAlign=\"center\" py={4}>\n            PAGE 404\n          </Heading>\n          <Box pt={4} align=\"center\">\n            <Link to=\"/posts\">TOPへ戻る</Link>\n          </Box>\n        </Box>\n      </Flex>\n    </>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { PostRoutes } from \"./PostRoutes\";\nimport { LoginPage } from \"../components/pages/user/LoginPage\";\nimport { MyPage } from \"../components/pages/user/MyPage\";\nimport { LoginUserProvider } from \"../providers/LoginUserProvider\";\nimport { SignUpPage } from \"../components/pages/user/SignUpPage\";\nimport { UserEditPage } from \"../components/pages/user/UserEditPage\";\nimport { PasswordEditPage } from \"../components/pages/user/PasswordEditPage\";\nimport { Page404 } from \"../components/pages/Page404\";\n\nexport const Router: VFC = memo(() => {\n  return (\n    <LoginUserProvider>\n      <Switch>\n        <Route\n          path=\"/posts\"\n          render={({ match: { url } }) => (\n            <Switch>\n              {PostRoutes.map((route) => (\n                <Route\n                  key={route.path}\n                  exact={route.exact}\n                  path={`${url}${route.path}`}\n                >\n                  {route.children}\n                </Route>\n              ))}\n            </Switch>\n          )}\n        ></Route>\n\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n\n        <Route path=\"/signup\">\n          <SignUpPage />\n        </Route>\n\n        <Route path=\"/user/edit\">\n          <UserEditPage />\n        </Route>\n\n        <Route path=\"/password\">\n          <PasswordEditPage />\n        </Route>\n\n        <Route path=\"/mypage\">\n          <MyPage />\n        </Route>\n\n        <Route path=\"*\">\n          <Page404 />\n        </Route>\n      </Switch>\n    </LoginUserProvider>\n  );\n});\n","import { memo, VFC } from \"react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\nimport { IconButton } from \"@chakra-ui/react\";\n\ntype Props = {\n  onOpen: () => void;\n};\n\nexport const MenuIconButton: VFC<Props> = memo((props) => {\n  const { onOpen } = props;\n  return (\n    <IconButton\n      aria-label=\"メニューボタン\"\n      icon={<HamburgerIcon />}\n      size=\"sm\"\n      variant=\"unstyled\"\n      display={{ base: \"block\", md: \"none\" }}\n      onClick={onOpen}\n    />\n  );\n});\n","import { memo, VFC } from \"react\";\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerOverlay,\n} from \"@chakra-ui/react\";\n\ntype Props = {\n  onClose: () => void;\n  isOpen: boolean;\n  onClickMyPage: () => void;\n  onClickPostIndex: () => void;\n  onClickPostNew: () => void;\n  onClickLoginPage: () => void;\n  userLoginStatus: boolean;\n};\n\nexport const MenuDrawer: VFC<Props> = memo((props) => {\n  const {\n    onClose,\n    isOpen,\n    onClickMyPage,\n    onClickPostIndex,\n    onClickPostNew,\n    onClickLoginPage,\n    userLoginStatus,\n  } = props;\n  return (\n    <Drawer placement=\"left\" size=\"xs\" onClose={onClose} isOpen={isOpen}>\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerBody p={0} bg=\"gray.200\">\n            <p>{userLoginStatus}</p>\n            {!userLoginStatus ? (\n              <Button w=\"100%\" onClick={onClickLoginPage}>\n                ログイン画面\n              </Button>\n            ) : (\n              <>\n                <Button w=\"100%\" onClick={onClickMyPage}>\n                  マイページ\n                </Button>\n                <Button w=\"100%\" onClick={onClickPostIndex}>\n                  投稿一覧\n                </Button>\n                <Button w=\"100%\" onClick={onClickPostNew}>\n                  投稿新規作成\n                </Button>\n              </>\n            )}\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n});\n","import { Flex, Heading, Link, Box, useDisclosure } from \"@chakra-ui/react\";\nimport { memo, useCallback, VFC, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { MenuIconButton } from \"../../atms/button/MenuIconButton\";\nimport { MenuDrawer } from \"../../molecules/MenuDrawer\";\nimport { LoginUserContext } from \"../../../providers/LoginUserProvider\";\n\nexport const Header: VFC = memo(() => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n  const onClickLoginPage = useCallback(() => history.push(\"/login\"), [history]);\n  const onClickPostIndex = useCallback(() => history.push(\"/posts\"), [history]);\n  const onClickPostNew = useCallback(\n    () => history.push(\"/posts/new\"),\n    [history]\n  );\n  const onClickMyPage = useCallback(() => history.push(\"/mypage\"), [history]);\n  const { loginUser, userLoginStatus } = useContext(LoginUserContext);\n\n  return (\n    <>\n      <Flex\n        as=\"nav\"\n        bg=\"blue.500\"\n        color=\"gray.50\"\n        align=\"center\"\n        justify=\"space-between\"\n        padding={{ base: 3, md: 5 }}\n      >\n        <Flex align=\"center\" mr={8}>\n          <Heading as=\"h1\" fontSize={{ base: \"md\", md: \"lg\" }}>\n            TODOアプリ\n          </Heading>\n        </Flex>\n\n        <Flex\n          align=\"center\"\n          fontSize=\"sm\"\n          display={{ base: \"none\", md: \"flex\" }}\n        >\n          {userLoginStatus ? (\n            <>\n              <Box pr={4}>\n                <Link onClick={onClickPostIndex}>投稿一覧</Link>\n              </Box>\n              <Box pr={4}>\n                <Link onClick={onClickPostNew}>投稿新規作成</Link>\n              </Box>\n              <Box pr={4}>\n                <Link onClick={onClickMyPage}>\n                  ID:{loginUser?.userId}/{loginUser?.email}\n                </Link>\n              </Box>\n            </>\n          ) : (\n            <>\n              <Box pr={4}>\n                <Link onClick={onClickLoginPage}>ログイン画面</Link>\n              </Box>\n              {/* <Box pr={4}><Link onClick={onClickLoginPage}>新規作成</Link></Box> */}\n              {/* <Box><Link onClick={onClickPostIndex}>投稿一覧</Link></Box> */}\n            </>\n          )}\n        </Flex>\n        <MenuIconButton onOpen={onOpen} />\n      </Flex>\n\n      <MenuDrawer\n        onClose={onClose}\n        isOpen={isOpen}\n        onClickMyPage={onClickMyPage}\n        onClickPostIndex={onClickPostIndex}\n        onClickPostNew={onClickPostNew}\n        onClickLoginPage={onClickLoginPage}\n        userLoginStatus={userLoginStatus}\n      />\n    </>\n  );\n});\n","import { ReactNode, memo, VFC } from \"react\";\n\nimport { Header } from \"../organisms/layouts/Header\";\n\ntype Props = {\n  children: ReactNode;\n};\n\nexport const HeaderLayout: VFC<Props> = memo((props) => {\n  const { children } = props;\n  return (\n    <>\n      <Header />\n      {children}\n    </>\n  );\n});\n","import { Box, ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme/theme\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Router } from \"./router/Router\";\nimport \"./App.css\";\nimport { HeaderLayout } from \"./components/templates/HeaderLayout\";\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <BrowserRouter>\n        <HeaderLayout>\n          <Box m={16}>\n            <Router />\n          </Box>\n        </HeaderLayout>\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}